#####
# Docker compose YAML file
#
# For documentation see: https://docs.docker.com/compose/yml/
#####

version: "3.3"

services:
    db:
        image: markrowsoft/postgresql-bdr
        volumes:
            - pgdata:/var/lib/postgresql/pgdata
        networks:
          - webnet
        #deploy:
          #mode: replicated
          #replicas: 4
          #labels: [APP=MEDRECDB]
          #placement:
            #constraints: [node.role == manager]
        container_name: pg01
            
    webserver:
        image: nginx:latest
        depends_on:
            - web
        volumes:
        #    - static-files:/srv/static-files
             - ./src:/src
             - ./config/nginx:/etc/nginx/conf.d
        env_file:
            - ./config/environment/development.env
        #deploy:
          #mode: replicated
          #replicas: 3
          #labels: [APP=MEDRECSERV]
          #placement:
            #constraints: [node.role == manager]

    #webserver:
        #build:
            #context: .
            #dockerfile: services/webserver/Dockerfile
        #ports:
            #- "80:80"
            #- "443:443"
        #depends_on:
            #- webapp
        #volumes:
            #- static-files:/srv/static-files
        #env_file:
            #- ./config/environment/development.env
            
            
    web:
        #image: gerbreown/medrec:latest
        build: .
        container_name: dg01
        command: bash -c "pyhon3 manage.py makemigrations && python manage.py migrate"
        
        volumes:
            #- ./webapp/medrec:/srv/medrec
            #- static-files:/srv/static-files
            - ./src:/src
        env_file:
            - ./config/environment/development.env
        expose:
            - "8000"
        depends_on:
            - db
        #deploy:
          #mode: replicated
          #replicas: 2
          #labels: [APP=MEDRECAPP]
          #placement:
            #constraints: [node.role == manager]

    #webapp:
        #build:
            #context: webapp
        #volumes:
            #- ./webapp/starter:/srv/starter
            #- static-files:/srv/static-files
        #expose:
            #- "8000"
        #depends_on:
            #- db
        #env_file:
            #- ./config/environment/development.env
               
volumes:
  pgdata:
    external: true
  data:
    external: true
  static-files:
    external: false
networks:
   webnet:
    
